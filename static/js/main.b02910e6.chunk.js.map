{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","movieUrl","a","fetch","response","ok","Error","status","statusText","json","getMovieByTitle","title","Response","FindMovie","addMovie","useState","movieTitle","setMovieTitle","setMovie","isMovieError","setMovieError","getMovie","movieFromServer","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","placeholder","classNames","onClick","App","setMovies","find","item","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b02910e6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img src={movie.Poster} alt=\"Film logo\" />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=bca5eec2';\n\nexport const request = async (movieUrl: string) => {\n  try {\n    const response = await fetch(`${BASE_URL}&t=${movieUrl}`);\n\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw new Error(`ERROR: ${error}`);\n  }\n};\n\nexport const getMovieByTitle = async (title: string) => {\n  const movie = await request(title);\n\n  if (movie.Response === 'False') {\n    throw new Error(`Error: ${movie.Error}`);\n  }\n\n  return movie;\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovieByTitle } from '../../api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isMovieError, setMovieError] = useState(false);\n  const onMovieTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMovieError(false);\n    setMovieTitle(event.target.value);\n  };\n\n  const getMovie = async () => {\n    try {\n      const movieFromServer = await getMovieByTitle(movieTitle);\n\n      setMovie(movieFromServer);\n    } catch {\n      setMovie(null);\n      setMovieError(true);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (movie) {\n      addMovie(movie);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={movieTitle}\n              onChange={onMovieTitleChange}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isMovieError,\n              })}\n            />\n          </div>\n          {isMovieError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-primary\">\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const hasMovieDuplicate = movies.find(\n      (item) => item.imdbID === movie.imdbID,\n    );\n\n    if (!hasMovieDuplicate) {\n      setMovies((prevMovies) => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}